apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql-deployment
  namespace: django-namespace
  labels:
    app: mysql-deployment-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: django-app
      type: deployment
  template:
    metadata:
      labels:
        app: django-app
        type: deployment
    spec:
      containers:
      - name: postgrescontainer
        image: mysql:8.0-debian
        ports:
        - containerPort: 8000

---
# apiVersion: v1
# kind: Servi
# metadata:
#   name: django-nodeport-service
#   namespace: django-namespace
# spec:
#   type: NodePort
#   selector:
#     app: django-pod-app
#   ports:
#       # By default and for convenience, the `targetPort` is set to the same value as the `port` field.
#     - port: 8000
#       targetPort: 8000
#       # Optional field
#       # By default and for convenience, the Kubernetes control plane will allocate a port from a range (default: 30000-32767)
#       nodePort: 30007

---
# apiVersion: v1
# kind: Service
# metadata:
#   name: django-loadbalancer-service
#   namespace: django-namespace
# spec:
#   type: LoadBalancer
#   selector:
#     app: django
#   ports:
#       # By default and for convenience, the `targetPort` is set to the same value as the `port` field.
#     - port: 8000
#       targetPort: 8000
#       # Optional field
#       # By default and for convenience, the Kubernetes control plane will allocate a port from a range (default: 30000-32767)
#       nodePort: 30008



---
---
apiVersion: v1
kind: Service
metadata:
  name: django-clusterip-service
  namespace: django-namespace
spec:
  selector:
    app: django-app
    type: deployment
  ports: 
      # By default and for convenience, the `targetPort` is set to the same value as the `port` field.
    - port: 8000
      targetPort: 8000
      # Optional field
      # By default and for convenience, the Kubernetes control plane will allocate a port from a range (default: 30000-32767)
      # nodePort: 30008
